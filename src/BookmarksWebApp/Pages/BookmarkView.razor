@page "/bookmarks"
@inject Bookmarks.Services.BookmarkSvc _svc

@using DataModel;
@using DataModel.Filtering;
@using MatBlazor;

<h1>Bookmarks</h1>

@if (_svc.Config == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@_svc" OnSubmit="HandleSubmit">
        <ServerSideValidator />
        <ValidationSummary />

        <InputText id="name" @bind-Value="_svc.Filter" @onkeydown="OnKeyUp" />

        <button type="submit"><span class="oi oi-question-mark">Search</span></button>
    </EditForm>


    <div class="mat-layout-grid">
        <div class="mat-layout-grid-inner">
            @foreach (var bookmark in _svc.FilteredBookmarks)
            {
                <MatCard class="mat-layout-grid-cell">
                    <MatCardContent>
                        <MatHeadline5>@bookmark.Title</MatHeadline5>
                        <MatList>
                            @foreach (var tag in bookmark.Tags)
                            {
                                <MatChip Label="@tag"></MatChip>
                            }
                        </MatList>
                    </MatCardContent>
                </MatCard>
            }
        </div>
    </div>
}
@code {
    private void HandleSubmit()
    {
        Console.WriteLine("HandleSubmit called ...");
    }

    private void OnKeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Escape")
        {
            _svc.ResetFilter();
        }
    }

    protected override Task OnInitializedAsync()
    {
        return _svc.InitializeAsync();
    }
}
